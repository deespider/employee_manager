{"version":3,"sources":["logo.svg","services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.js","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","components/UpdateEmployeeComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","id","EmployeeService","then","res","setState","filter","this","history","push","getEmployees","data","className","onClick","map","key","firstName","lastName","emailId","style","marginLeft","viewEmployee","Component","HeaderComponent","src","height","FooterComponent","href","CreateEmployeeComponent","saveOrUpdateEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","match","params","getEmployeeById","getTitle","placeholder","name","onChange","cancel","ViewEmployeeComponent","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.41b39b13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nconst EMPLOYEE_API_BASE_URL = \"https://empcurd.herokuapp.com/api/v1/employees/\";\n\nclass EmployeeService {\n\n    getEmployees(){\n        return axios.get(EMPLOYEE_API_BASE_URL);\n    }\n\n    createEmployee(employee){\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\n    }\n\n    getEmployeeById(employeeId){\n        return axios.get(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n\n    updateEmployee(employee, employeeId){\n        return axios.put(EMPLOYEE_API_BASE_URL + '/' + employeeId, employee);\n    }\n\n    deleteEmployee(employeeId){\n        return axios.delete(EMPLOYEE_API_BASE_URL + '/' + employeeId);\n    }\n}\n\nexport default new EmployeeService()","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService'\n\nclass ListEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                employees: []\n        }\n        this.addEmployee = this.addEmployee.bind(this);\n        this.editEmployee = this.editEmployee.bind(this);\n        this.deleteEmployee = this.deleteEmployee.bind(this);\n    }\n\n    deleteEmployee(id){\n        EmployeeService.deleteEmployee(id).then( res => {\n            this.setState({employees: this.state.employees.filter(employee => employee.id !== id)});\n        });\n    }\n    viewEmployee(id){\n        this.props.history.push(`/view-employee/${id}`);\n    }\n    editEmployee(id){\n        this.props.history.push(`/add-employee/${id}`);\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployees().then((res) => {\n            this.setState({ employees: res.data});\n        });\n    }\n\n    addEmployee(){\n        this.props.history.push('/add-employee/_add');\n    }\n\n    render() {\n        return (\n            <div>\n                 <h2 className=\"text-center\">Employee Management System</h2>\n                 <div className = \"row\">\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}> Add Employee</button>\n                 </div>\n                 <br></br>\n                 <div className = \"row\">\n                        <table className = \"table table-striped table-bordered\">\n\n                            <thead>\n                                <tr>\n                                    <th> Employee First Name</th>\n                                    <th> Employee Last Name</th>\n                                    <th> Employee Email Id</th>\n                                    <th> Actions</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.employees.map(\n                                        employee => \n                                        <tr key = {employee.id}>\n                                             <td> { employee.firstName} </td>   \n                                             <td> {employee.lastName}</td>\n                                             <td> {employee.emailId}</td>\n                                             <td>\n                                                 <button onClick={ () => this.editEmployee(employee.id)} className=\"btn btn-info\">Update </button>\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete </button>\n                                                 <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewEmployee(employee.id)} className=\"btn btn-info\">View </button>\n                                             </td>\n                                        </tr>\n                                    )\n                                }\n                            </tbody>\n                        </table>\n\n                 </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ListEmployeeComponent\n","import React, { Component } from 'react'\n\nclass HeaderComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                 \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><img src='img/emp.png' height={40}/></div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default HeaderComponent\n","import React, { Component } from 'react'\n\nclass FooterComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n                 \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <footer className = \"footer\">\n                    <span className=\"text-muted\">Made by <a href='https://www.linkedin.com/in/diptendu-biswas-734988192/'>Diptendu </a>©2022</span>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default FooterComponent\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService';\n\nclass CreateEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            // step 2\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            emailId: ''\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\n    }\n\n    // step 3\n    componentDidMount(){\n\n        // step 4\n        if(this.state.id === '_add'){\n            return\n        }else{\n            EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n                let employee = res.data;\n                this.setState({firstName: employee.firstName,\n                    lastName: employee.lastName,\n                    emailId : employee.emailId\n                });\n            });\n        }        \n    }\n    saveOrUpdateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId};\n        console.log('employee => ' + JSON.stringify(employee));\n\n        // step 5\n        if(this.state.id === '_add'){\n            EmployeeService.createEmployee(employee).then(res =>{\n                this.props.history.push('/employees');\n            });\n        }else{\n            EmployeeService.updateEmployee(employee, this.state.id).then( res => {\n                this.props.history.push('/employees');\n            });\n        }\n    }\n    \n    changeFirstNameHandler= (event) => {\n        this.setState({firstName: event.target.value});\n    }\n\n    changeLastNameHandler= (event) => {\n        this.setState({lastName: event.target.value});\n    }\n\n    changeEmailHandler= (event) => {\n        this.setState({emailId: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    getTitle(){\n        if(this.state.id === '_add'){\n            return <h3 className=\"text-center\">Add Employee</h3>\n        }else{\n            return <h3 className=\"text-center\">Update Employee</h3>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                {\n                                    this.getTitle()\n                                }\n                                <div className = \"card-body\">\n                                    <form>\n                                        <div className = \"form-group\">\n                                            <label> First Name: </label>\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Last Name: </label>\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Email Id: </label>\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\n                                        </div>\n\n                                        <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateEmployeeComponent\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService'\n\nclass ViewEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            employee: {}\n        }\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\n            this.setState({employee: res.data});\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                <div className = \"card col-md-6 offset-md-3\">\n                    <h3 className = \"text-center\"> View Employee Details</h3>\n                    <div className = \"card-body\">\n                        <div className = \"row\">\n                            <label> Employee First Name: </label>\n                            <div> { this.state.employee.firstName }</div>\n                        </div>\n                        <div className = \"row\">\n                            <label> Employee Last Name: </label>\n                            <div> { this.state.employee.lastName }</div>\n                        </div>\n                        <div className = \"row\">\n                            <label> Employee Email ID: </label>\n                            <div> { this.state.employee.emailId }</div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ViewEmployeeComponent\n","import React, { Component } from 'react'\nimport EmployeeService from '../services/EmployeeService';\n\nclass UpdateEmployeeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            firstName: '',\n            lastName: '',\n            emailId: ''\n        }\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n        this.updateEmployee = this.updateEmployee.bind(this);\n    }\n\n    componentDidMount(){\n        EmployeeService.getEmployeeById(this.state.id).then( (res) =>{\n            let employee = res.data;\n            this.setState({firstName: employee.firstName,\n                lastName: employee.lastName,\n                emailId : employee.emailId\n            });\n        });\n    }\n\n    updateEmployee = (e) => {\n        e.preventDefault();\n        let employee = {firstName: this.state.firstName, lastName: this.state.lastName, emailId: this.state.emailId};\n        console.log('employee => ' + JSON.stringify(employee));\n        console.log('id => ' + JSON.stringify(this.state.id));\n        EmployeeService.updateEmployee(employee, this.state.id).then( res => {\n            this.props.history.push('/employees');\n        });\n    }\n    \n    changeFirstNameHandler= (event) => {\n        this.setState({firstName: event.target.value});\n    }\n\n    changeLastNameHandler= (event) => {\n        this.setState({lastName: event.target.value});\n    }\n\n    changeEmailHandler= (event) => {\n        this.setState({emailId: event.target.value});\n    }\n\n    cancel(){\n        this.props.history.push('/employees');\n    }\n\n    render() {\n        return (\n            <div>\n                <br></br>\n                   <div className = \"container\">\n                        <div className = \"row\">\n                            <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n                                <h3 className=\"text-center\">Update Employee</h3>\n                                <div className = \"card-body\">\n                                    <form>\n                                        <div className = \"form-group\">\n                                            <label> First Name: </label>\n                                            <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\" \n                                                value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Last Name: </label>\n                                            <input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\" \n                                                value={this.state.lastName} onChange={this.changeLastNameHandler}/>\n                                        </div>\n                                        <div className = \"form-group\">\n                                            <label> Email Id: </label>\n                                            <input placeholder=\"Email Address\" name=\"emailId\" className=\"form-control\" \n                                                value={this.state.emailId} onChange={this.changeEmailHandler}/>\n                                        </div>\n\n                                        <button className=\"btn btn-success\" onClick={this.updateEmployee}>Save</button>\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n\n                   </div>\n            </div>\n        )\n    }\n}\n\nexport default UpdateEmployeeComponent\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\nfunction App() {\n  return (\n    <div>\n        <Router>\n              <HeaderComponent />\n                <div className=\"container\">\n                    <Switch> \n                          <Route path = \"/\" exact component = {ListEmployeeComponent}></Route>\n                          <Route path = \"/employees\" component = {ListEmployeeComponent}></Route>\n                          <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponent}></Route>\n                          <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponent}></Route>\n                          {/* <Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponent}></Route> */}\n                    </Switch>\n                </div>\n              <FooterComponent />\n        </Router>\n    </div>\n    \n  );\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n       \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}